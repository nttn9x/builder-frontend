{"version":3,"sources":["pages/public/register/register.module.scss","pages/public/register/register-form.module.scss","pages/public/register/register-image.module.scss","styles/images/modules/login/signup-image.jpg","pages/public/register/register-logo.module.scss","pages/public/register/register.yui.tsx","pages/public/register/register-form.component.tsx","pages/public/register/register-image.component.tsx","pages/public/register/register-logo.component.tsx","pages/public/register/register.hook.tsx","pages/public/register/index.tsx"],"names":["module","exports","RegisterSchema","Yup","shape","username","trim","required","email","password","RegisterForm","props","values","touched","errors","handleBlur","handleChange","t","useTranslation","isUsernameError","useMemo","isPasswordError","isEmailError","container","spacing","item","xs","variant","className","styles","title","fullWidth","autoFocus","error","label","onChange","defaultValue","helperText","onBlur","inputProps","autoComplete","form","type","button","color","RegisterImage","React","memo","history","justify","alignItems","src","Logo","alt","link","to","ROUTES","LOGIN","RegisterLogo","HOME","logo","LogoIcon","useRegisterHook","enqueueSnackbar","useSnackbar","useRecoilState","authState","setAuth","useState","loading","setLoading","onSubmit","useCallback","actions","a","register","data","setData","hasLogin","user","push","ProjectList","message","SNACKBAR_TYPE","Error","anchorOrigin","vertical","horizontal","Register","initialValues","validationSchema","handleSubmit","rest","container__form","style","textAlign"],"mappings":"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","file":"static/js/10.8ba3abb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"register_container__1czVG\",\"container__form\":\"register_container__form__vLDCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"register-form_title__2MBVp\",\"button\":\"register-form_button__1DlRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"register-image_link__4wYke\",\"container\":\"register-image_container__2AtIJ\"};","module.exports = __webpack_public_path__ + \"static/media/signup-image.75eb7c4e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"register-logo_container__3IsAT\",\"logo\":\"register-logo_logo__3yPJL\"};","import * as Yup from \"yup\";\n\nconst RegisterSchema = Yup.object().shape({\n  username: Yup.string().trim().required(\"this_field_is_required\"),\n  email: Yup.string().trim().email(\"invalid_email\").required(\"this_field_is_required\"),\n  password: Yup.string().trim().required(\"this_field_is_required\"),\n});\n\nexport default RegisterSchema;\n","import React, { useMemo } from \"react\";\nimport styles from \"./register-form.module.scss\";\n\nimport { Button, Grid, TextField, Typography } from \"components/ui-libraries\";\nimport { useTranslation } from \"react-i18next\";\n\nconst RegisterForm = (props: any) => {\n  const { values, touched, errors, handleBlur, handleChange } = props;\n  const { t } = useTranslation([\"login\", \"error\"]);\n\n  const isUsernameError = useMemo(() => errors.username && touched.username, [\n    errors.username,\n    touched.username,\n  ]);\n  const isPasswordError = useMemo(() => errors.password && touched.password, [\n    errors.password,\n    touched.password,\n  ]);\n  const isEmailError = useMemo(() => errors.email && touched.email, [\n    errors.email,\n    touched.email,\n  ]);\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant={\"h4\"} className={styles.title}>\n          {t(\"sign_up\")}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          autoFocus\n          error={isUsernameError}\n          label={t(\"username\")}\n          onChange={handleChange(\"username\")}\n          defaultValue={values.username}\n          helperText={isUsernameError && t(`error:${errors.username}`)}\n          variant=\"outlined\"\n          onBlur={handleBlur}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          error={isEmailError}\n          label={t(\"email\")}\n          onChange={handleChange(\"email\")}\n          defaultValue={values.email}\n          helperText={isEmailError && t(`error:${errors.email}`)}\n          variant=\"outlined\"\n          onBlur={handleBlur}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          fullWidth\n          inputProps={{\n            autoComplete: \"new-password\",\n            form: {\n              autoComplete: \"off\",\n            },\n          }}\n          error={isPasswordError}\n          label={t(\"password\")}\n          defaultValue={values.password}\n          helperText={isPasswordError && t(`error:${errors.password}`)}\n          variant=\"outlined\"\n          type={\"password\"}\n          onChange={handleChange(\"password\")}\n          onBlur={handleBlur}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          className={styles.button}\n          variant=\"contained\"\n          color={\"primary\"}\n          type={\"submit\"}\n        >\n          {t(\"register\")}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport styles from \"./register-image.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ROUTES } from \"constants/navigation\";\nimport { Grid } from \"components/ui-libraries\";\n\nimport Logo from \"styles/images/modules/login/signup-image.jpg\";\n\nconst RegisterImage = React.memo(({ history }: any) => {\n  const { t } = useTranslation([\"login\"]);\n  return (\n    <div className={styles.container}>\n      <Grid justify={\"flex-end\"} alignItems={\"flex-end\"} container spacing={3}>\n        <Grid item xs={12}>\n          <img src={Logo} alt=\"Logo\" />\n        </Grid>\n        <Grid item xs={12}>\n          <Link className={styles.link} to={ROUTES.LOGIN}>\n            {t(\"i_am_already_a_member\")}\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  );\n});\n\nexport default RegisterImage;\n","import React from \"react\";\nimport styles from \"./register-logo.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nimport { ROUTES } from \"constants/navigation\";\n\nimport LogoIcon from \"styles/images/common/logo.png\";\n\nconst RegisterLogo = React.memo(() => {\n  return (\n    <div className={styles.container}>\n      <Link to={ROUTES.HOME}>\n        <img className={styles.logo} src={LogoIcon} alt=\"Device\" />\n      </Link>\n    </div>\n  );\n});\n\nexport default RegisterLogo;\n","import { useCallback, useState } from \"react\";\n\nimport { useRecoilState } from \"recoil\";\nimport { useSnackbar } from \"notistack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { SNACKBAR_TYPE } from \"constants/common\";\n\nimport { authState } from \"store/auth\";\nimport { setData } from \"utils/auth.util\";\n\nimport { ROUTES } from \"constants/navigation\";\nimport { register } from \"services/authentication.service\";\n\nconst useRegisterHook = ({ history }: any) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { t } = useTranslation([\"login\"]);\n  const [, setAuth] = useRecoilState(authState);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onSubmit = useCallback(\n    async (values: any, actions) => {\n      try {\n        setLoading(true);\n\n        const { data }: any = await register(values);\n\n        // Store in localstorage\n        setData(data);\n\n        // Update recoiljs\n        setAuth({\n          hasLogin: true,\n          user: data.user,\n        });\n\n        history.push(ROUTES.ProjectList);\n      } catch (e) {\n        enqueueSnackbar(t(e.message), {\n          variant: SNACKBAR_TYPE.Error,\n          anchorOrigin: {\n            vertical: \"top\",\n            horizontal: \"center\",\n          },\n        });\n\n        setLoading(false);\n      }\n    },\n    [t, history, enqueueSnackbar, setAuth]\n  );\n\n  return { loading, onSubmit };\n};\n\nexport default useRegisterHook;\n","import React from \"react\";\nimport styles from \"./register.module.scss\";\nimport {Formik} from \"formik\";\nimport {useTranslation} from \"react-i18next\";\n\nimport {DefaultProgress} from \"components/ui-own\";\n\nimport RegisterSchema from \"./register.yui\";\nimport RegisterForm from \"./register-form.component\";\n\nimport {Grid} from \"components/ui-libraries\";\n\nimport RegisterImage from \"./register-image.component\";\nimport RegisterLogo from \"./register-logo.component\";\n\nimport useRegisterHook from \"./register.hook\";\n\n// Load before access home page, improve user experience\nimport(/* webpackPrefetch: true */ \"pages/private/project-list\");\n\nconst Register = ({ history }: any) => {\n  const { loading, onSubmit } = useRegisterHook({ history });\n  const { t } = useTranslation([\"login\"]);\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={RegisterSchema}\n      onSubmit={onSubmit}\n    >\n      {({ handleSubmit, ...rest }) => {\n        return (\n          <form className={styles.container} onSubmit={handleSubmit}>\n            <div className={styles.container__form}>\n              <Grid container spacing={3}>\n                <Grid item xs={6}>\n                  <RegisterLogo />\n                  {loading ? (\n                    <div className={styles.loading}>\n                      <DefaultProgress message={t(\"common:please_wait\")} />\n                    </div>\n                  ) : (\n                    <RegisterForm {...rest} />\n                  )}\n                </Grid>\n                <Grid item xs={6} style={{ textAlign: \"center\" }}>\n                  <RegisterImage />\n                </Grid>\n              </Grid>\n            </div>\n          </form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}